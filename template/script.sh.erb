#!/usr/bin/env bash

<%-
  session_dir = session.staged_root
  tutorial_dir = session.staged_root.join('ParallelR')

  match = /^app_rstudio_server\/(.+)$|.+ R\/(.+) .+/.match(context.version)
  r_version = match[1] unless match[1].nil?
  r_version = match[2] unless match[2].nil?

  module_dir = context.cluster == 'owens' ? '/usr' : '/apps'
%>

# Load the required environment
setup_env () {
  module purge

  # The rserver container module should set these environment variables:

  #   APPTAINER_BINDPATH="/etc,/media,/mnt,/opt,/run,/srv,/usr,/var,/users"
  #   RSTUDIO_SERVER_IMAGE="/usr/local/project/ondemand/singularity/rstudio/rstudio_launcher_centos7.simg"
  #   PATH="$PATH:/path/to/R:/path/to/rstudio/rserver"
 
  # APPTAINER_BINDPATH is being used to bind all RStudio's requirements from
  # the host into the guest, and so those values may vary between sites.

  module load xalt/latest ondemand
  <%- if context.cluster !~ /kubernetes/ -%>
  module load rstudio_launcher/centos7
  <%- end -%>
  module load <%= context.version %>

  <%- if context.include_tutorials == "1" %>
  export R_LIBS_USER="<%= tutorial_dir %>/Rworkshop"
  mkdir -p "<%= tutorial_dir %>/Rworkshop"
  export APPTAINER_HOME="<%= tutorial_dir %>"
  <%- end %>
}
setup_env

# if you're in a specialized version of RStudio (classes or tutorials)
if [[ "$APPTAINER_HOME" != "$HOME" ]]; then

  # prepare the host directories and files
  mkdir -p "<%= tutorial_dir %>"
  mkdir -p "$APPTAINER_HOME"
  mv "<%= session_dir %>/bin" "<%= tutorial_dir %>"
  mv "<%= session_dir %>/etc" "<%= tutorial_dir %>"
  touch "$APPTAINER_HOME/0_${OSC_CLASS_ID:-osc_class}.md"

  export WORKING_DIR="<%= tutorial_dir %>"

  # Copy over classroom materials if the env variable exists
  if [[ -n "$OSC_CLASS_FILES" ]]; then
    set -x
    rsync -avz --ignore-existing "$OSC_CLASS_FILES" "$APPTAINER_HOME"
    { set +x; } 2>/dev/null
  fi
else
  export WORKING_DIR="<%= session_dir %>"
fi

# sanatize APPTAINER_BINDPATH for mounts that don't exist or that you
# have no access to.
set -x
if [[ "${APPTAINER_BINDPATH:-x}" != "x" ]]; then

  SAFE_BINDPATH=""
  IFS=',' read -r -a array <<< "$APPTAINER_BINDPATH"
  for dir in "${array[@]}"; do
    [ -d "$dir" ] && [ "$dir" != "/etc" ] && SAFE_BINDPATH="$dir,$SAFE_BINDPATH"
  done

  export APPTAINER_BINDPATH=$(echo $SAFE_BINDPATH | sed 's/,$//')
  export SINGULARITY_BINDPATH="$APPTAINER_BINDPATH"
fi
set +x

#
# Start RStudio Server
#
# PAM auth helper used by RStudio
export RSTUDIO_AUTH="$WORKING_DIR/bin/auth"

# Generate an `rsession` wrapper script
export RSESSION_WRAPPER_FILE="$WORKING_DIR/rsession.sh"
(
umask 077
sed 's/^ \{2\}//' > "$WORKING_DIR/rsession.sh" << EOL
  #!/usr/bin/env bash

  # Log all output from this script
  export RSESSION_LOG_FILE="$WORKING_DIR/rsession.log"

  exec &>>"\${RSESSION_LOG_FILE}"
  set -x

  # rsession.sh doesn't share the same env as the outside script, so these
  # need to be set explicitly
  export R_LIBS_SITE="${R_LIBS_SITE}"
  export TZ="US/Eastern"
  export HOME="$APPTAINER_HOME"
  export MODULEPATH_ROOT="$MODULEPATH_ROOT"
  export MODULEPATH="$MODULEPATH"
  export LMOD_PKG="$LMOD_PKG"

  env

  # Launch the original command
  echo "Launching rsession..."
  exec rsession --r-libs-user "${R_LIBS_USER}" "\${@}"
EOL
)
chmod 700 "$WORKING_DIR/rsession.sh"

# Set working directory to home directory
cd "${APPTAINER_HOME}"

# Output debug info
module list
hostname

# rstudio runtime stuff
mkdir "$TMPDIR/run"
mkdir "$TMPDIR/lib"

# server log directory in this job's working directory
mkdir -p "$WORKING_DIR/logs"

set -x
# Launch the RStudio Server
echo "Starting up rserver... at $(date)"

export APPTAINERENV_LD_LIBRARY_PATH="$LD_LIBRARY_PATH"
export SINGULARITYENV_LD_LIBRARY_PATH="$APPTAINERENV_LD_LIBRARY_PATH"

<%- if context.cluster !~ /kubernetes/ -%>
# --contain is used to override the bindpaths specified in OSC's
# singularity.conf which would otherwise conflict in /etc
# using --contain requires us to bind mount in addition directories including
# /dev and /proc
# optional_tutorial_home_bind is used when include_tutorials to change the home
# directory to get a clean environment without clobbering files
singularity run --contain \
 -B $TMPDIR:/tmp \
 -B $WORKING_DIR \
 -B $WORKING_DIR/etc:/etc/rstudio \
 -B /etc/fonts \
 -B /etc/profile \
 -B /etc/profile.d \
 -B /etc/alternatives \
 -B <%= module_dir %> \
 "$RSTUDIO_SERVER_IMAGE" \
 --www-port "${port}" \
 --auth-none 0 \
 --auth-pam-helper-path "${RSTUDIO_AUTH}" \
 --auth-encrypt-password 0 \
 --rsession-path "${RSESSION_WRAPPER_FILE}" \
 <%- if r_version > '4.1' -%>
 --server-data-dir='/tmp/run' \
 --server-user=$(whoami)
 <%- end -%>

<%- else -%>
cd ${APPTAINER_HOME:=$HOME}
rserver \
  --www-port 8080 \
  --auth-none 0 \
  --auth-pam-helper-path "${RSTUDIO_AUTH}" \
  --auth-encrypt-password 0 \
  --rsession-path "${RSESSION_WRAPPER_FILE}" \
  <%- if r_version > '4.1' -%>
  --server-data-dir='/tmp/run' \
  --server-user=$(whoami)
  <%- end -%>
<%- end -%>
