#!/usr/bin/env bash

<%-
# If in tutorial mode change $HOME inside the container to ensure a clean environment
if context.include_tutorials == "1"
  working_dir_host = session.staged_root.join('ParallelR')
  working_dir_container = '${HOME}'
  optional_tutorial_home_bind = "-B \"#{working_dir_host}:$HOME\""
else
  working_dir_host = '${PWD}'
  working_dir_container = working_dir_host
  optional_tutorial_home_bind = ''
end
%>

# Load the required environment
setup_env () {
  module purge

  # The rserver container module should set these environment variables:

  #   SINGULARITY_BINDPATH="/etc,/media,/mnt,/opt,/run,/srv,/usr,/var,/users"
  #   RSTUDIO_SERVER_IMAGE="/usr/local/project/ondemand/singularity/rstudio/rstudio_launcher_centos7.simg"
  #   PATH="$PATH:/path/to/R:/path/to/rstudio/rserver"
 
  # SINGULARITY_BINDPATH is being used to bind all RStudio's requirements from
  # the host into the guest, and so those values may vary between sites.

  module use /usr/local/share/lmodfiles/project/ondemand
  module load xalt/latest <%= context.version %> rstudio_container/2019Feb
  module load texlive
  module load <%= context.additional_modules %>

  <%- if context.include_tutorials == "1" %>
  export R_LIBS_USER="<%= working_dir_container %>/Rworkshop"
  mkdir -p "<%= working_dir_host %>/Rworkshop"
  <%- end %>
}
setup_env

#
# Start RStudio Server
#

# PAM auth helper used by RStudio
export RSTUDIO_AUTH="<%= working_dir_container %>/bin/auth"

# Generate an `rsession` wrapper script
export RSESSION_WRAPPER_FILE="<%= working_dir_container %>/rsession.sh"
(
umask 077
sed 's/^ \{2\}//' > "<%= working_dir_host %>/rsession.sh" << EOL
  #!/usr/bin/env bash

  # Log all output from this script
  export RSESSION_LOG_FILE="<%= working_dir_container %>/rsession.log"

  exec &>>"\${RSESSION_LOG_FILE}"

  source "<%= working_dir_container %>/.env"

  # Launch the original command
  echo "Launching rsession..."
  set -x
  exec rsession --r-libs-user "${R_LIBS_USER}" "\${@}"
EOL
)
chmod 700 "<%= working_dir_host %>/rsession.sh"

# Set working directory to home directory
cd "${HOME}"

# Output debug info
module list
hostname

set -x
# Launch the RStudio Server
echo "Starting up rserver..."

# Dump environment without functions for use in rsession.sh, filtering readonly variables
(set -o posix; set) | grep -vP '^(BASHOPTS|BASH_VERSINFO|EUID|PPID|SHELLOPTS|UID)' > "<%= working_dir_host %>/.env"

# --contain is used to override the bindpaths specified in OSC's
# singularity.conf which would otherwise conflict in /etc
# using --contain requires us to bind mount in addition directories including
# /dev and /proc
# optional_tutorial_home_bind is used when include_tutorials to change the home
# directory to get a clean environment without clobbering files
SINGULARITYENV_LD_LIBRARY_PATH="$LD_LIBRARY_PATH" singularity run --contain -B "$TMPDIR:/tmp" <%= optional_tutorial_home_bind %> \
 "$RSTUDIO_SERVER_IMAGE" \
 --www-port "${port}" \
 --auth-none 0 \
 --auth-pam-helper-path "${RSTUDIO_AUTH}" \
 --auth-encrypt-password 0 \
 --rsession-path "${RSESSION_WRAPPER_FILE}"
